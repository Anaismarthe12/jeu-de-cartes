{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\cyberhack-game\\\\cyberhack-game\\\\frontend\\\\src\\\\components\\\\EventDeck.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './EventDeck.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDeck = ({\n  onSelectEvents\n}) => {\n  _s();\n  const [isSelected, setIsSelected] = useState(false);\n  const createRandomEventDeck = () => {\n    const eventDeck = [];\n    // Nous avons 10 cartes événement différentes\n    for (let i = 1; i <= 10; i++) {\n      eventDeck.push({\n        id: i,\n        image: require(`../assets/evenements/evenement-${i}.png`),\n        verso: require('../assets/evenements/evenement-verso.png')\n      });\n    }\n\n    // Mélanger le deck\n    for (let i = eventDeck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [eventDeck[i], eventDeck[j]] = [eventDeck[j], eventDeck[i]];\n    }\n    return eventDeck;\n  };\n  const handleClick = () => {\n    if (!isSelected) {\n      const selectedDeck = createRandomEventDeck();\n      onSelectEvents(selectedDeck);\n      setIsSelected(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `event-deck ${isSelected ? 'selected' : ''}`,\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-cards-stack\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-card\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('../assets/evenements/evenement-verso.png'),\n          alt: \"Cartes \\xE9v\\xE9nement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDeck, \"5DtxMhs0n+JsbGWNZftSFTxrVZQ=\");\n_c = EventDeck;\nexport default EventDeck;\nvar _c;\n$RefreshReg$(_c, \"EventDeck\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EventDeck","onSelectEvents","_s","isSelected","setIsSelected","createRandomEventDeck","eventDeck","i","push","id","image","require","verso","length","j","Math","floor","random","handleClick","selectedDeck","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/cyberhack-game/cyberhack-game/frontend/src/components/EventDeck.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './EventDeck.css';\r\n\r\nconst EventDeck = ({ onSelectEvents }) => {\r\n  const [isSelected, setIsSelected] = useState(false);\r\n\r\n  const createRandomEventDeck = () => {\r\n    const eventDeck = [];\r\n    // Nous avons 10 cartes événement différentes\r\n    for (let i = 1; i <= 10; i++) {\r\n      eventDeck.push({\r\n        id: i,\r\n        image: require(`../assets/evenements/evenement-${i}.png`),\r\n        verso: require('../assets/evenements/evenement-verso.png')\r\n      });\r\n    }\r\n    \r\n    // Mélanger le deck\r\n    for (let i = eventDeck.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [eventDeck[i], eventDeck[j]] = [eventDeck[j], eventDeck[i]];\r\n    }\r\n    \r\n    return eventDeck;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!isSelected) {\r\n      const selectedDeck = createRandomEventDeck();\r\n      onSelectEvents(selectedDeck);\r\n      setIsSelected(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`event-deck ${isSelected ? 'selected' : ''}`}\r\n      onClick={handleClick}\r\n    >\r\n      <div className=\"event-cards-stack\">\r\n        <div className=\"event-card\">\r\n          <img \r\n            src={require('../assets/evenements/evenement-verso.png')} \r\n            alt=\"Cartes événement\" \r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDeck; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMQ,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,SAAS,GAAG,EAAE;IACpB;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5BD,SAAS,CAACE,IAAI,CAAC;QACbC,EAAE,EAAEF,CAAC;QACLG,KAAK,EAAEC,OAAO,CAAC,kCAAkCJ,CAAC,MAAM,CAAC;QACzDK,KAAK,EAAED,OAAO,CAAC,0CAA0C;MAC3D,CAAC,CAAC;IACJ;;IAEA;IACA,KAAK,IAAIJ,CAAC,GAAGD,SAAS,CAACO,MAAM,GAAG,CAAC,EAAEN,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC7C,MAAMO,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIV,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,SAAS,CAACC,CAAC,CAAC,EAAED,SAAS,CAACQ,CAAC,CAAC,CAAC,GAAG,CAACR,SAAS,CAACQ,CAAC,CAAC,EAAER,SAAS,CAACC,CAAC,CAAC,CAAC;IAC7D;IAEA,OAAOD,SAAS;EAClB,CAAC;EAED,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACf,UAAU,EAAE;MACf,MAAMgB,YAAY,GAAGd,qBAAqB,CAAC,CAAC;MAC5CJ,cAAc,CAACkB,YAAY,CAAC;MAC5Bf,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,oBACEL,OAAA;IACEqB,SAAS,EAAE,cAAcjB,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;IACxDkB,OAAO,EAAEH,WAAY;IAAAI,QAAA,eAErBvB,OAAA;MAAKqB,SAAS,EAAC,mBAAmB;MAAAE,QAAA,eAChCvB,OAAA;QAAKqB,SAAS,EAAC,YAAY;QAAAE,QAAA,eACzBvB,OAAA;UACEwB,GAAG,EAAEZ,OAAO,CAAC,0CAA0C,CAAE;UACzDa,GAAG,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA9CIF,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}