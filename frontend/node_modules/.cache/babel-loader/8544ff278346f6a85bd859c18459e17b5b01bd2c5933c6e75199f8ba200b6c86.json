{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\cyberhack-game\\\\cyberhack-game\\\\frontend\\\\src\\\\components\\\\AttackDeck.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './AttackDeck.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AttackDeck = ({\n  onSelectAttacks\n}) => {\n  _s();\n  const [showDeck, setShowDeck] = useState(false);\n  const [selectedAttacks, setSelectedAttacks] = useState([]);\n\n  // Créer le deck de cartes d'attaque\n  const createAttackDeck = () => {\n    let deck = [];\n    // Créer 15 cartes d'attaque (ajustez le nombre selon vos besoins)\n    for (let i = 1; i <= 15; i++) {\n      deck.push({\n        id: i,\n        image: require(`../assets/attaques/attaque-${i}.png`),\n        verso: require('../assets/attaques/attaque-verso.png')\n      });\n    }\n    // Mélanger le deck\n    return deck.sort(() => Math.random() - 0.5);\n  };\n  const [attackDeck] = useState(createAttackDeck());\n  const handleAttackClick = index => {\n    if (selectedAttacks.length < 5) {\n      setSelectedAttacks([...selectedAttacks, attackDeck[index]]);\n    }\n  };\n  const confirmSelection = () => {\n    if (selectedAttacks.length === 5) {\n      onSelectAttacks(selectedAttacks);\n      setShowDeck(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-label attack-deck\",\n      onClick: () => setShowDeck(true),\n      children: \"Cartes Attaque\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), showDeck && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-selection-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-info\",\n        children: [\"S\\xE9lectionnez 5 cartes d'attaque (\", selectedAttacks.length, \"/5)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-grid\",\n        children: attackDeck.slice(0, 15).map((attack, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card-item ${selectedAttacks.includes(attack) ? 'selected' : ''}`,\n          onClick: () => handleAttackClick(index),\n          style: {\n            '--recto': `url(${attack.image})`,\n            '--verso': `url(${attack.verso})`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: attack.image,\n            alt: `Attaque ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"confirm-btn\",\n        onClick: confirmSelection,\n        disabled: selectedAttacks.length !== 5,\n        children: \"Valider la s\\xE9lection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(AttackDeck, \"xS2skT6CfJbxviIVt/rupnMdJLs=\");\n_c = AttackDeck;\nexport default AttackDeck;\nvar _c;\n$RefreshReg$(_c, \"AttackDeck\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AttackDeck","onSelectAttacks","_s","showDeck","setShowDeck","selectedAttacks","setSelectedAttacks","createAttackDeck","deck","i","push","id","image","require","verso","sort","Math","random","attackDeck","handleAttackClick","index","length","confirmSelection","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","attack","includes","style","src","alt","disabled","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/cyberhack-game/cyberhack-game/frontend/src/components/AttackDeck.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './AttackDeck.css';\r\n\r\nconst AttackDeck = ({ onSelectAttacks }) => {\r\n  const [showDeck, setShowDeck] = useState(false);\r\n  const [selectedAttacks, setSelectedAttacks] = useState([]);\r\n\r\n  // Créer le deck de cartes d'attaque\r\n  const createAttackDeck = () => {\r\n    let deck = [];\r\n    // Créer 15 cartes d'attaque (ajustez le nombre selon vos besoins)\r\n    for (let i = 1; i <= 15; i++) {\r\n      deck.push({\r\n        id: i,\r\n        image: require(`../assets/attaques/attaque-${i}.png`),\r\n        verso: require('../assets/attaques/attaque-verso.png')\r\n      });\r\n    }\r\n    // Mélanger le deck\r\n    return deck.sort(() => Math.random() - 0.5);\r\n  };\r\n\r\n  const [attackDeck] = useState(createAttackDeck());\r\n\r\n  const handleAttackClick = (index) => {\r\n    if (selectedAttacks.length < 5) {\r\n      setSelectedAttacks([...selectedAttacks, attackDeck[index]]);\r\n    }\r\n  };\r\n\r\n  const confirmSelection = () => {\r\n    if (selectedAttacks.length === 5) {\r\n      onSelectAttacks(selectedAttacks);\r\n      setShowDeck(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"deck-label attack-deck\" onClick={() => setShowDeck(true)}>\r\n        Cartes Attaque\r\n      </div>\r\n\r\n      {showDeck && (\r\n        <div className=\"card-selection-modal\">\r\n          <div className=\"selection-info\">\r\n            Sélectionnez 5 cartes d'attaque ({selectedAttacks.length}/5)\r\n          </div>\r\n          \r\n          <div className=\"card-grid\">\r\n            {attackDeck.slice(0, 15).map((attack, index) => (\r\n              <div\r\n                key={index}\r\n                className={`card-item ${\r\n                  selectedAttacks.includes(attack) ? 'selected' : ''\r\n                }`}\r\n                onClick={() => handleAttackClick(index)}\r\n                style={{\r\n                  '--recto': `url(${attack.image})`,\r\n                  '--verso': `url(${attack.verso})`\r\n                }}\r\n              >\r\n                <img src={attack.image} alt={`Attaque ${index + 1}`} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <button \r\n            className=\"confirm-btn\"\r\n            onClick={confirmSelection}\r\n            disabled={selectedAttacks.length !== 5}\r\n          >\r\n            Valider la sélection\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttackDeck; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,IAAI,GAAG,EAAE;IACb;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5BD,IAAI,CAACE,IAAI,CAAC;QACRC,EAAE,EAAEF,CAAC;QACLG,KAAK,EAAEC,OAAO,CAAC,8BAA8BJ,CAAC,MAAM,CAAC;QACrDK,KAAK,EAAED,OAAO,CAAC,sCAAsC;MACvD,CAAC,CAAC;IACJ;IACA;IACA,OAAOL,IAAI,CAACO,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EAC7C,CAAC;EAED,MAAM,CAACC,UAAU,CAAC,GAAGvB,QAAQ,CAACY,gBAAgB,CAAC,CAAC,CAAC;EAEjD,MAAMY,iBAAiB,GAAIC,KAAK,IAAK;IACnC,IAAIf,eAAe,CAACgB,MAAM,GAAG,CAAC,EAAE;MAC9Bf,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEa,UAAU,CAACE,KAAK,CAAC,CAAC,CAAC;IAC7D;EACF,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIjB,eAAe,CAACgB,MAAM,KAAK,CAAC,EAAE;MAChCpB,eAAe,CAACI,eAAe,CAAC;MAChCD,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACEP,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACE1B,OAAA;MAAK2B,SAAS,EAAC,wBAAwB;MAACC,OAAO,EAAEA,CAAA,KAAMrB,WAAW,CAAC,IAAI,CAAE;MAAAmB,QAAA,EAAC;IAE1E;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAEL1B,QAAQ,iBACPN,OAAA;MAAK2B,SAAS,EAAC,sBAAsB;MAAAD,QAAA,gBACnC1B,OAAA;QAAK2B,SAAS,EAAC,gBAAgB;QAAAD,QAAA,GAAC,sCACG,EAAClB,eAAe,CAACgB,MAAM,EAAC,KAC3D;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAENhC,OAAA;QAAK2B,SAAS,EAAC,WAAW;QAAAD,QAAA,EACvBL,UAAU,CAACY,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEZ,KAAK,kBACzCvB,OAAA;UAEE2B,SAAS,EAAE,aACTnB,eAAe,CAAC4B,QAAQ,CAACD,MAAM,CAAC,GAAG,UAAU,GAAG,EAAE,EACjD;UACHP,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAACC,KAAK,CAAE;UACxCc,KAAK,EAAE;YACL,SAAS,EAAE,OAAOF,MAAM,CAACpB,KAAK,GAAG;YACjC,SAAS,EAAE,OAAOoB,MAAM,CAAClB,KAAK;UAChC,CAAE;UAAAS,QAAA,eAEF1B,OAAA;YAAKsC,GAAG,EAAEH,MAAM,CAACpB,KAAM;YAACwB,GAAG,EAAE,WAAWhB,KAAK,GAAG,CAAC;UAAG;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GAVlDT,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENhC,OAAA;QACE2B,SAAS,EAAC,aAAa;QACvBC,OAAO,EAAEH,gBAAiB;QAC1Be,QAAQ,EAAEhC,eAAe,CAACgB,MAAM,KAAK,CAAE;QAAAE,QAAA,EACxC;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA,eACD,CAAC;AAEP,CAAC;AAAC3B,EAAA,CA3EIF,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AA6EhB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}