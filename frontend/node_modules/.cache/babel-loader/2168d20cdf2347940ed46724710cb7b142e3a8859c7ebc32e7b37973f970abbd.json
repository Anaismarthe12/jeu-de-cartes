{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\cyberhack-game\\\\cyberhack-game\\\\frontend\\\\src\\\\components\\\\SectorDeck.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './SectorDeck.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SectorDeck = ({\n  onSelectSectors\n}) => {\n  _s();\n  const [showDeck, setShowDeck] = useState(false);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const deckRef = useRef(null);\n\n  // Importer les 10 cartes secteur (recto/verso)\n  const sectorCards = Array.from({\n    length: 10\n  }, (_, i) => ({\n    recto: require(`../../assets/secteurs/secteur_${i + 1}_recto.png`),\n    verso: require(`../../assets/secteurs/secteur_${i + 1}_verso.png`)\n  }));\n\n  // Fermer le deck quand on clique ailleurs\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (deckRef.current && !deckRef.current.contains(event.target)) {\n        setShowDeck(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const handleDeckClick = () => {\n    setShowDeck(true);\n    setSelectedCards([]);\n  };\n  const handleCardClick = index => {\n    const newSelection = [...selectedCards];\n    const cardIndex = newSelection.findIndex(card => card.index === index);\n    if (cardIndex >= 0) {\n      newSelection.splice(cardIndex, 1);\n    } else if (newSelection.length < 5) {\n      newSelection.push({\n        index,\n        side: newSelection.length % 2 === 0 ? 'recto' : 'verso'\n      });\n    }\n    setSelectedCards(newSelection);\n  };\n  const confirmSelection = () => {\n    const selectedSectors = selectedCards.map(card => sectorCards[card.index][card.side]);\n    onSelectSectors(selectedSectors);\n    setShowDeck(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sector-deck-container\",\n    ref: deckRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-pile\",\n      onClick: handleDeckClick,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: sectorCards[0].recto,\n        alt: \"Paquet de cartes\",\n        className: \"top-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), showDeck && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-selection-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-grid\",\n        children: sectorCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card-item ${selectedCards.some(c => c.index === index) ? 'selected' : ''}`,\n          onClick: () => handleCardClick(index),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedCards.some(c => c.index === index) ? card[selectedCards.find(c => c.index === index).side] : card.recto,\n            alt: `Secteur ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"confirm-btn\",\n        onClick: confirmSelection,\n        disabled: selectedCards.length !== 5,\n        children: \"Valider 5 cartes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SectorDeck, \"B9iFJTQl4+zAGWqVvADT35qghPg=\");\n_c = SectorDeck;\nexport default SectorDeck;\nvar _c;\n$RefreshReg$(_c, \"SectorDeck\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","SectorDeck","onSelectSectors","_s","showDeck","setShowDeck","selectedCards","setSelectedCards","deckRef","sectorCards","Array","from","length","_","i","recto","require","verso","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleDeckClick","handleCardClick","index","newSelection","cardIndex","findIndex","card","splice","push","side","confirmSelection","selectedSectors","map","className","ref","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","some","c","find","disabled","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/cyberhack-game/cyberhack-game/frontend/src/components/SectorDeck.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './SectorDeck.css';\r\n\r\nconst SectorDeck = ({ onSelectSectors }) => {\r\n  const [showDeck, setShowDeck] = useState(false);\r\n  const [selectedCards, setSelectedCards] = useState([]);\r\n  const deckRef = useRef(null);\r\n\r\n  // Importer les 10 cartes secteur (recto/verso)\r\n  const sectorCards = Array.from({ length: 10 }, (_, i) => ({\r\n    recto: require(`../../assets/secteurs/secteur_${i+1}_recto.png`),\r\n    verso: require(`../../assets/secteurs/secteur_${i+1}_verso.png`)\r\n  }));\r\n\r\n  // Fermer le deck quand on clique ailleurs\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (deckRef.current && !deckRef.current.contains(event.target)) {\r\n        setShowDeck(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const handleDeckClick = () => {\r\n    setShowDeck(true);\r\n    setSelectedCards([]);\r\n  };\r\n\r\n  const handleCardClick = (index) => {\r\n    const newSelection = [...selectedCards];\r\n    const cardIndex = newSelection.findIndex(card => card.index === index);\r\n\r\n    if (cardIndex >= 0) {\r\n      newSelection.splice(cardIndex, 1);\r\n    } else if (newSelection.length < 5) {\r\n      newSelection.push({\r\n        index,\r\n        side: newSelection.length % 2 === 0 ? 'recto' : 'verso'\r\n      });\r\n    }\r\n\r\n    setSelectedCards(newSelection);\r\n  };\r\n\r\n  const confirmSelection = () => {\r\n    const selectedSectors = selectedCards.map(card => \r\n      sectorCards[card.index][card.side]\r\n    );\r\n    onSelectSectors(selectedSectors);\r\n    setShowDeck(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sector-deck-container\" ref={deckRef}>\r\n      <div className=\"deck-pile\" onClick={handleDeckClick}>\r\n        <img \r\n          src={sectorCards[0].recto} \r\n          alt=\"Paquet de cartes\" \r\n          className=\"top-card\"\r\n        />\r\n        <div className=\"card-back\"></div>\r\n      </div>\r\n\r\n      {showDeck && (\r\n        <div className=\"card-selection-modal\">\r\n          <div className=\"card-grid\">\r\n            {sectorCards.map((card, index) => (\r\n              <div\r\n                key={index}\r\n                className={`card-item ${\r\n                  selectedCards.some(c => c.index === index) ? 'selected' : ''\r\n                }`}\r\n                onClick={() => handleCardClick(index)}\r\n              >\r\n                <img\r\n                  src={selectedCards.some(c => c.index === index) \r\n                    ? card[selectedCards.find(c => c.index === index).side]\r\n                    : card.recto}\r\n                  alt={`Secteur ${index + 1}`}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button \r\n            className=\"confirm-btn\"\r\n            onClick={confirmSelection}\r\n            disabled={selectedCards.length !== 5}\r\n          >\r\n            Valider 5 cartes\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectorDeck;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}