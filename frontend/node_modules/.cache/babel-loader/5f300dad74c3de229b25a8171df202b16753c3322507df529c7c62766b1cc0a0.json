{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\cyberha\\\\frontend\\\\src\\\\components\\\\GuessAttack.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GuessAttack.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GuessAttack = ({\n  attackCard,\n  onGuessComplete\n}) => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else {\n      // Le temps est écoulé\n      handleTimeUp();\n    }\n  }, [timeLeft]);\n  const handleTimeUp = () => {\n    // Le temps est écoulé, considérer comme échec si aucune réponse n'a été sélectionnée\n    if (selectedAnswer === null) {\n      onGuessComplete(false);\n    }\n  };\n  const handlePropositionClick = proposition => {\n    setSelectedAnswer(proposition);\n    const isCorrect = proposition === attackCard.nom;\n    setTimeout(() => {\n      onGuessComplete(isCorrect);\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guess-attack-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Temps restant : \", timeLeft, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attack-card-display\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: attackCard.image,\n        alt: `Attaque ${attackCard.nom}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Description de l'attaque :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: attackCard.description || \"Chargement...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"secteur-cible\",\n        children: [\"Secteur cible : \", attackCard.secteur_cible]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), attackCard.propositions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"propositions-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Devinez le nom de cette attaque :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"propositions\",\n        children: attackCard.propositions.map((proposition, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePropositionClick(proposition),\n          className: `proposition-btn ${selectedAnswer === proposition ? 'selected' : ''}`,\n          children: proposition\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(GuessAttack, \"GmID+38GrBLGsElOdSk3zAosu5M=\");\n_c = GuessAttack;\nexport default GuessAttack;\nvar _c;\n$RefreshReg$(_c, \"GuessAttack\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GuessAttack","attackCard","onGuessComplete","_s","timeLeft","setTimeLeft","selectedAnswer","setSelectedAnswer","timer","setTimeout","clearTimeout","handleTimeUp","handlePropositionClick","proposition","isCorrect","nom","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","description","secteur_cible","propositions","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/cyberha/frontend/src/components/GuessAttack.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GuessAttack.css';\n\nconst GuessAttack = ({ attackCard, onGuessComplete }) => {\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  \n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else {\n      // Le temps est écoulé\n      handleTimeUp();\n    }\n  }, [timeLeft]);\n  \n  const handleTimeUp = () => {\n    // Le temps est écoulé, considérer comme échec si aucune réponse n'a été sélectionnée\n    if (selectedAnswer === null) {\n      onGuessComplete(false);\n    }\n  };\n  \n  const handlePropositionClick = (proposition) => {\n    setSelectedAnswer(proposition);\n    const isCorrect = proposition === attackCard.nom;\n    \n    setTimeout(() => {\n      onGuessComplete(isCorrect);\n    }, 500);\n  };\n\n  return (\n    <div className=\"guess-attack-container\">\n      <div className=\"timer\">Temps restant : {timeLeft}s</div>\n      \n      <div className=\"attack-card-display\">\n        <img src={attackCard.image} alt={`Attaque ${attackCard.nom}`} />\n      </div>\n      \n      <div className=\"description-container\">\n        <h3>Description de l'attaque :</h3>\n        <p>{attackCard.description || \"Chargement...\"}</p>\n        <p className=\"secteur-cible\">Secteur cible : {attackCard.secteur_cible}</p>\n      </div>\n      \n      {attackCard.propositions && (\n        <div className=\"propositions-container\">\n          <h3>Devinez le nom de cette attaque :</h3>\n          <div className=\"propositions\">\n            {attackCard.propositions.map((proposition, index) => (\n              <button\n                key={index}\n                onClick={() => handlePropositionClick(proposition)}\n                className={`proposition-btn ${\n                  selectedAnswer === proposition ? 'selected' : ''\n                }`}\n              >\n                {proposition}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GuessAttack;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}