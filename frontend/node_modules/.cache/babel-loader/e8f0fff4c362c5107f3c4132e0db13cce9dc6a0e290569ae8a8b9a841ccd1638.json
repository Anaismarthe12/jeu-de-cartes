{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\cyberhack-game\\\\cyberhack-game\\\\frontend\\\\src\\\\components\\\\GameTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Dice from './Dice';\nimport Hourglass from './Hourglass';\nimport SectorDeck from './SectorDeck';\nimport ShieldDeck from './ShieldDeck';\nimport './GameTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameTable = () => {\n  _s();\n  const [selectedSectors, setSelectedSectors] = useState([]);\n  const [selectedShields, setSelectedShields] = useState([]);\n  const getShieldImage = (type, value) => {\n    return require(`../assets/boucliers/bouclier-${value}-${type}.png`);\n  };\n  const getShieldVerso = () => {\n    return require('../assets/boucliers/bouclier-verso.png');\n  };\n  const handleSectorSelection = sectors => {\n    setSelectedSectors(sectors);\n  };\n  const handleShieldSelection = shieldPockets => {\n    console.log('Shield pockets received:', shieldPockets);\n    setSelectedShields(shieldPockets);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-zone\",\n      children: [/*#__PURE__*/_jsxDEV(SectorDeck, {\n        onSelectSectors: handleSectorSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShieldDeck, {\n        onSelectShields: handleShieldSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-table\",\n      children: [/*#__PURE__*/_jsxDEV(Dice, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hourglass, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-cards-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-sectors-row\",\n          children: selectedSectors.map((sector, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sector-card-on-table\",\n            style: {\n              '--recto': `url(${sector})`,\n              '--verso': `url(${sector.replace('recto', 'verso')})`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sector,\n              alt: `Secteur ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shield-pockets-row\",\n          children: selectedShields.map((pocket, pocketIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shield-pocket\",\n            children: pocket.map((shield, shieldIndex) => {\n              const shieldImage = getShieldImage(shield.type, shield.value);\n              const versoImage = getShieldVerso();\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"shield-card-on-table\",\n                style: {\n                  '--recto': `url(${shieldImage})`,\n                  '--verso': `url(${versoImage})`\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: shieldImage,\n                  alt: `Bouclier ${shield.type} ${shield.value}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this)\n              }, shieldIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this);\n            })\n          }, pocketIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(GameTable, \"bywbk/n2ACPu8nBEw6FMxU/HhuE=\");\n_c = GameTable;\nexport default GameTable;\nvar _c;\n$RefreshReg$(_c, \"GameTable\");","map":{"version":3,"names":["React","useState","Dice","Hourglass","SectorDeck","ShieldDeck","jsxDEV","_jsxDEV","GameTable","_s","selectedSectors","setSelectedSectors","selectedShields","setSelectedShields","getShieldImage","type","value","require","getShieldVerso","handleSectorSelection","sectors","handleShieldSelection","shieldPockets","console","log","className","children","onSelectSectors","fileName","_jsxFileName","lineNumber","columnNumber","onSelectShields","map","sector","index","style","replace","src","alt","pocket","pocketIndex","shield","shieldIndex","shieldImage","versoImage","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/cyberhack-game/cyberhack-game/frontend/src/components/GameTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Dice from './Dice';\r\nimport Hourglass from './Hourglass';\r\nimport SectorDeck from './SectorDeck';\r\nimport ShieldDeck from './ShieldDeck';\r\nimport './GameTable.css';\r\n\r\nconst GameTable = () => {\r\n  const [selectedSectors, setSelectedSectors] = useState([]);\r\n  const [selectedShields, setSelectedShields] = useState([]);\r\n\r\n  const getShieldImage = (type, value) => {\r\n    return require(`../assets/boucliers/bouclier-${value}-${type}.png`);\r\n  };\r\n\r\n  const getShieldVerso = () => {\r\n    return require('../assets/boucliers/bouclier-verso.png');\r\n  };\r\n\r\n  const handleSectorSelection = (sectors) => {\r\n    setSelectedSectors(sectors);\r\n  };\r\n\r\n  const handleShieldSelection = (shieldPockets) => {\r\n    console.log('Shield pockets received:', shieldPockets);\r\n    setSelectedShields(shieldPockets);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"cards-zone\">\r\n        <SectorDeck onSelectSectors={handleSectorSelection} />\r\n        <ShieldDeck onSelectShields={handleShieldSelection} />\r\n      </div>\r\n      <div className=\"game-table\">\r\n        <Dice />\r\n        <Hourglass />\r\n        \r\n        {/* Zone pour afficher les cartes sélectionnées */}\r\n        <div className=\"selected-cards-area\">\r\n          {/* Ligne des secteurs */}\r\n          <div className=\"selected-sectors-row\">\r\n            {selectedSectors.map((sector, index) => (\r\n              <div \r\n                key={index} \r\n                className=\"sector-card-on-table\"\r\n                style={{\r\n                  '--recto': `url(${sector})`,\r\n                  '--verso': `url(${sector.replace('recto', 'verso')})`\r\n                }}\r\n              >\r\n                <img src={sector} alt={`Secteur ${index + 1}`} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Ligne des pochettes de boucliers */}\r\n          <div className=\"shield-pockets-row\">\r\n            {selectedShields.map((pocket, pocketIndex) => (\r\n              <div key={pocketIndex} className=\"shield-pocket\">\r\n                {pocket.map((shield, shieldIndex) => {\r\n                  const shieldImage = getShieldImage(shield.type, shield.value);\r\n                  const versoImage = getShieldVerso();\r\n                  return (\r\n                    <div \r\n                      key={shieldIndex}\r\n                      className=\"shield-card-on-table\"\r\n                      style={{\r\n                        '--recto': `url(${shieldImage})`,\r\n                        '--verso': `url(${versoImage})`\r\n                      }}\r\n                    >\r\n                      <img \r\n                        src={shieldImage}\r\n                        alt={`Bouclier ${shield.type} ${shield.value}`} \r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}